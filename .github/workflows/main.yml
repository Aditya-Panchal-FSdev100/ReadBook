name: ASP.NET Deploy to IIS

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: self-hosted

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '9.0.x'

    - name: Restore NuGet packages
      run: dotnet restore

    - name: Build with dotnet
      run: dotnet build --configuration Release

    - name: Publish with dotnet
      run: dotnet publish --configuration Release --output "C:\Users\nares\Documents\BOOKGA\ReadBook"

    - name: Deploy to IIS
      run: |
        # Stop IIS
        iisreset /stop
        
        # Define the local and IIS bin directories
        $localBin = 'C:\Users\nares\Documents\BOOKGA\ReadBook\bin'
        $iisBin = 'C:\IISPublish\ReadBook.com\bin'
        
        # Ensure IIS bin directory exists
        if (!(Test-Path $iisBin)) {
            New-Item -ItemType Directory -Force -Path $iisBin
        }
        
        # Get the most recent modification date in the local bin
        $latestLocalFile = Get-ChildItem -Path $localBin -Recurse | Sort-Object LastWriteTime -Descending | Select-Object -First 1
        $latestLocalDate = $latestLocalFile.LastWriteTime
        
        # Get the most recent modification date in the IIS bin
        $latestIisFile = Get-ChildItem -Path $iisBin -Recurse | Sort-Object LastWriteTime -Descending | Select-Object -First 1
        $latestIisDate = $latestIisFile.LastWriteTime
        
        Write-Host $latestLocalFile
        Write-Host $latestIisFile
        Write-Host $latestIisDate
        #debug
        Write-Host $latestLocalDate
        Write-Host $latestIisDate
        # Check for mismatch and copy files if the local bin has newer files
        if ($latestLocalDate -gt $latestIisDate) {
            $filesToCopy = Get-ChildItem -Path $localBin -Recurse | Where-Object { $_.LastWriteTime -gt $latestIisDate }
            foreach ($file in $filesToCopy) {
                $destinationFile = $file.FullName.Replace($localBin, $iisBin)
                Write-Host "Copying file: $file.FullName to $destinationFile"
                xcopy $file.FullName $destinationFile /s /y
            }
            Write-Host "Newer files have been copied to IIS bin."
        } else {
            Write-Host "No newer files to copy."
        }
        
        # Start IIS
        iisreset /start

        iisreset /start
